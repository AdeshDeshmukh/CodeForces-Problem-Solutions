// Templet : Adesh 
 
#include <bits/stdc++.h>
using namespace std;
 
#define foo(i, a, b)  for (int i = (a); i < (b); ++i)
#define foop(j, c, d) for (int j = (c); j <= (d); ++j)
#define rfoop(i, a, b) for (int i = (a)-1; i >= (b); --i)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define F first
#define S second
#define sline(s) getline(cin, s)
 
using ll = long long;
using vll = vector<ll>;
using pll = pair<ll, ll>;
using vpll = vector<pll>;
using vi = vector<int>;
using pi = pair<int, int>;
using vpi = vector<pi>;
 
 
 
const long long MOD = 1e9 + 7;
const long long INF = 1e18;
const double PI = 3.141592653589793238462;
const double EPS = 1e-9;
 
 
 
#define sorta(v) sort(all(v))
#define sortd(v) sort(all(v), greater<>()) // C++14+
#define reverse(v) reverse(all(v))
 
 
#define maxe(v) *max_element(all(v))
#define mine(v) *min_element(all(v))
#define sum(v) accumulate(all(v), 0LL) 
 
ll gcd(ll a, ll b) {
    while (b) {
        a %= b;
        swap(a, b);
    }
    return a;
}
 
ll lcm(ll a, ll b) {
    if (a == 0 || b == 0) return 0;
    return (a / gcd(a, b)) * b;
}
 
ll power(ll base, ll exp) {
    ll res = 1;
    base %= MOD;
    while (exp > 0) {
        if (exp % 2 == 1) res = (res * base) % MOD;
        base = (base * base) % MOD;
        exp /= 2;
    }
    return res;
}

 
 
 
void Adesh() {
    
    int n, k, x;
        cin >> n >> k >> x;
        vector<int> a(n);
        for (int &i : a) cin >> i;
        a.push_back(-1e9);
        a.push_back(1e9);
        n += 2;
        sort(a.begin(), a.end());
        int l = 0, r = x + 1;
        while (l + 1 < r) {
            int m = (l + r) >> 1, f = 0;
            a[0] = - m, a[n - 1] = x + m;
            for (int i = 1; i < n; ++i) f += max(0, (a[i] - m) - (a[i - 1] + m) + 1);
            if (f >= k) l = m;
            else r = m;
        }
        a[0] = - l, a[n - 1] = x + l;
        int j = 0;
        for (int i = 1; i < n; i++)
    		for (j = max(j, a[i - 1] + l); j <= min((a[i] - l), x) && k; j++)
    			cout << j << ' ', k--;
    	cout << '\n';
}
 
int main() {
#ifndef ONLINE_JUDGE
    freopen("Error.txt", "w", stderr);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
 
    
 //   ll t = 1 ;
    int t; cin >> t; 
    while (t--) { 
        Adesh();
    }
 
    return 0;
}
